# -*- coding: utf-8 -*-
__author__ = "PS11011010"

def parse_int(data):
    """
    Реализовать функцию parseInt, которая пытается найти число в строке, разбирая все символы по-порядку.
    Процесс разбора не прекратится, пока не встретится невалидный символ или конец строки. Основание десятичное.

    P.S. Переполнения могут быть. Один из тестов должен учитывать результат, который перевалил за максимальное
    значение целочисленной переменной.
    https://t.me/c/1533281926/60

    Description:
        Для каждого символа в строке, начиная слева выполняем проверку
        Если символ входит в набор допустимых символов (0-9),
        то смещаем 1 разряд результата (усножаем на 10) и добавляем в конец текущее число,
        а вот, если попался невалидный символ, выходим из цикла.
        Перед выводом результата смотрим: если не было ни одного валидного символа - результат None

    Args:
        data (string): строка, предположительно, содержащая число

    Returns:
        number: число, которое удалось разобрать, начиная с начала строки и до первого невалидного символа
    """
    allowed_symbols = [str(i) for i in range(0,10)]
    has_valid_data = False
    result = 0

    # для каждого символа в строке, начиная слева
    for symbol in data:
        # если символ входит в набор допустимых символов
        if symbol in allowed_symbols:
            # помечаем флаг того, что есть валидные данные
            has_valid_data = True
            # то смещаем 1 разряд результата и добавляем в конец текущее число
            result = result * 10 + int(symbol)
        # а вот, если попался невалидный символ, выходим
        else:
            break

    # если не было ни одного валидного символа - результат None
    return result if has_valid_data else None