interface ICircle {
    x: number;
    y: number;
    r: number;
}

/**
 * Даны координаты и радиус двух окружностей на плоскости.
 * Вернуть ИСТИНА, если вторая окружность полностью находится внутри первой.
 * * данное решение само определяет бОльшую окружность
 * @param a 
 * @param b 
 * @returns 
 * @author PS11011010
 * @description У нас может быть 9 вариантов, которые складываются из нескольких вариаций: радиус и координаты
 *  - Окружность a равна окружности b
 *  - Окружность a больше окружности b
 *  - Окружность a меньше окружности b
 *  - Центр окружности a находится внутри окружности b
 *  - Центр окружности a находится на окружности b
 *  - Центр окружности a находится за пределами окружности b
 * но, если подумать, и вспомнить строение планетарной коробки передач, в которой шестеренка сателлит
 * всегда касается при движении внутренней части кольцевой шестерни, то...
 * Достаточно получить радиус окружности z с радиусом в центре бОльшей окружности,
 * в пределах которой может быть радиус меньшей окружности.
 */
const CircleInsideCircle: (a: ICircle, b: ICircle) => boolean = (a, b) => {
    const [ minCircle, maxCircle ] = a.r < b.r ? [ a, b ] : [ b, a ];
    const z: ICircle = {
        x: minCircle.x,
        y: minCircle.y,
        r: maxCircle.r - minCircle.r
    }

    return z.r >= Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));
}

export {
    CircleInsideCircle
}